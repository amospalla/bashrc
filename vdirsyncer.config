# FileVersion=1

# read -s -p password: pass && echo ${pass} | gpg2 -r jordi@amospalla.es -e > ~/.vdirsyncer/password.gpg


# An example configuration for vdirsyncer.
#
# Move it to ~/.vdirsyncer/config or ~/.config/vdirsyncer/config and edit it.
# Run `vdirsyncer --help` for CLI usage.
#
# Optional parameters are commented out.
# This file doesn't document all available parameters, see
# http://vdirsyncer.pimutils.org/ for the rest of them.

[general]
# A folder where vdirsyncer can store some metadata about each pair.
status_path = "~/.vdirsyncer/status/"

# CARDDAV
[pair contactes_jordi]
# A `[pair <name>]` block defines two storages `a` and `b` that should be
# synchronized. The definition of these storages follows in `[storage <name>]`
# blocks. This is similar to accounts in OfflineIMAP.
a = "contactes_jordi_local"
b = "contactes_jordi_remot"

# Synchronize all collections that can be found.
# You need to run `vdirsyncer discover` if new calendars/addressbooks are added
# on the server.

collections = ["from a", "from b"]

# Synchronize the "display name" property into a local file (~/.contacts/displayname).
metadata = ["displayname"]

# To resolve a conflict the following values are possible:
#   `null` - abort when collisions occur (default)
#   `"a wins"` - assume a's items to be more up-to-date
#   `"b wins"` - assume b's items to be more up-to-date
#conflict_resolution = null

[storage contactes_jordi_local]
# A storage references actual data on a remote server or on the local disk.
# Similar to repositories in OfflineIMAP.
type = "filesystem"
path = "~/.contacts/"
fileext = ".vcf"

[storage contactes_jordi_remot]
type = "carddav"
url = "http://owncloud.amospalla.es/remote.php/dav/addressbooks/users/jordi/contacts/"
username = "jordi"
# The password can also be fetched from the system password storage, netrc or a
# custom command. See http://vdirsyncer.pimutils.org/en/stable/keyring.html
password.fetch = ["command", "~/.vdirsyncer/bin/get_password.sh"]

# # CALDAV
[pair calendari_jordi]
a = "calendari_jordi_local"
b = "calendari_jordi_remot"
collections = ["from a", "from b"]

# Calendars also have a color property
metadata = ["displayname", "color"]

[storage calendari_jordi_local]
type = "filesystem"
path = "~/.calendars/"
fileext = ".ics"

[storage calendari_jordi_remot]
type = "caldav"
url = "http://owncloud.amospalla.es/remote.php/dav/addressbooks/users/jordi/contacts/"
username = "jordi"
# The password can also be fetched from the system password storage, netrc or a
# custom command. See http://vdirsyncer.pimutils.org/en/stable/keyring.html
# password = "****"
password.fetch = ["command", "~/.vdirsyncer/bin/get_password.sh"]
