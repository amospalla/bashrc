#!/bin/bash

# FileVersion=8

# sudo: %KVM ALL=NOPASSWD:/usr/local/bin/qemu-bridge-tap
#
# echo "%KVM ALL=NOPASSWD:/usr/local/bin/qemu-bridge-tap" > /etc/sudoers.d/qemu-bridge-tap

# if we are not root, execute ourself with sudo or exit
if [ $UID -ne 0 ]
then
	sudo $0 $1 $2 $3 $USER
	exit $?
fi

mode="${1}"; shift
bridge="${1}"; shift
tap="${1}"; shift
user="${1:-${USER}}"; shift

check_bridge_exists() {
	# Check if supplied bridge exists
	if [ -z "${1}" ]; then
		echo "Must supply an existing bridge name"
		exit 1
	fi

	EXISTS=0
	for i in $(brctl show | sed 1d | grep -v '^[[:space:]]' | awk '{print $1}'); do
		[ $1 = $i ] && EXISTS=1 && break 1
	done
	if [ $EXISTS -eq 0 ]; then
		echo Bridge $1 does not exist, exiting.
		exit 1
	fi
}

case "${mode}" in
	create)
		check_bridge_exists "${bridge}"
		tap="${tap:0:13}"

		# Last tap interface with choosen name
		LAST=$(ip -o link show | awk '{print $2}' | sed 's/://' | grep "^${tap}[0-9]\+$" | sed "s/^${tap}//" | sort -g | tail -n1)

		# We will create the next one, so sum 1
		NUMBER=$(( $LAST + 1 ))

		# Create tap and assign to bridge
		tunctl -u "${user}" -t ${tap}${NUMBER} 2>&1 > /dev/null
		ifconfig ${tap}${NUMBER} 0 
		brctl addif "${bridge}" ${tap}${NUMBER}
		echo ${tap}${NUMBER}
	;;
	destroy)
		check_bridge_exists "${bridge}"
		# remove tap from bridge
		brctl delif "${bridge}" "${tap}"
		tunctl -d "${tap}" 2>&1 > /dev/null
	;;
	*)
		echo "usage:"
		echo "$(basename $0) create {bridge} {tap}"
		echo "    => creates a tap device connected to the bridge"
		echo "    => joins it to specified bridge"
		echo "    => echoes tap name"
		echo "$(basename $0) destroy {bridge} {tap}"
		echo "    => removes tap from bridge"
		echo "    => destroys tap"
	;;
esac
