#!/bin/bash

# FileVersion=2

# https://software.opensuse.org/download/package?project=isv:ownCloud:desktop&package=owncloud-client

####################
#### Functions #####
####################

show_profiles(){
	find "${profiles_path}" -type f -name "*.conf" | sed -e "s;${profiles_path}/\?;;" -e 's/\.conf$//' | sort
}

check_profile_exists(){
	local profile="${1}"
	[[ ! -f "${profiles_path}/${profile}.conf" ]] && echo "Error: profile does not exist." && exit 1 || true
}

main(){
	local profile="${1}" opts="" output="" output2="" ec=0
	. "${profiles_path}/${profile}.conf"

	if ! [[ -w "${path_local}/.sync_dates" ]]; then
		if ! [[ -d "${path_local}/.sync_dates" ]]; then
			if ! mkdir -p "${path_local}/.sync_dates"; then
				echo "[Error] can not create '${path_local}/.sync_dates'."
				exit 1
			fi
		fi
	fi
	[[ -d "${path_local}/.sync_log" ]] || mkdir -p "${path_local}/.sync_log"

	printf "$(date +"%Y%m%d%H%M%S") $(hostname -f)" > "${path_local}/.sync_dates/$(hostname -f)"
	path_remote="$(echo "${path_remote}" | sed 's/^\///')" # Remove heading slash from local path

	[[ -f "${profiles_path}/${profile}.exclude" ]] && opts="${opts} --exclude ${profiles_path}/${profile}.exclude" || true
	output="$(owncloudcmd ${opts} -h --trust --non-interactive -n ${path_local} ${hostname}/remote.php/webdav/${path_remote} 2>&1)" && ec=0 || ec=$?
	# echo "${output}" | grep -vE -e "Database entry found, compare: " -e "instruction: INSTRUCTION_(NONE|EVAL) <<="
	output2="$(echo "${output}" | sed -e '0,/#### Discovery end ###/d' -e '/#### Reconcile end ###########/,$d' -e 's/.*info sync.csync.reconciler ]:\s*//' | grep -v -e "INSTRUCTION_IGNORE" -e "\.sync_dates" -e "\.sync_log" | sort -k 2,2)"
	[[ ${#output2} -gt 0 ]] && echo "${output2}" > "${path_local}/.sync_log/$(printf "%(%Y%m%d%H%M%S)T")-$(hostname -f).log" || true

	return ${ec}
}

####################
#### Variables #####
####################

profiles_path="${HOME}/.owncloud"

####################
#### Code      #####
####################

if [[ "${1:-}" == execute ]]; then
	main "${2}"
	exit $?
else
	source "${HOME}/.bashrc"; _source_utilities
	args1='list'
	args2='run_serial {profiles...}'
	args3='{profile}'
	arguments_list=(args1 args2 args3)
	arguments_description=('owncloudsync' 'Owncloudcmd wrapper')
	arguments_parameters=( 'list: list available profiles.'
						   'run_serial {profiles}: execute profiles serially.'
						   '{profile}: profile to run.' )
	argparse "$@" && shift ${arguments_shift}
	args="${@}"
fi

set -eu o pipefail  -o errtrace

if [[ ${arguments[list]:-0} -eq 1 ]]; then
	show_profiles
	exit 0
elif [[ ${arguments[run_serial]:-0} -eq 1 ]]; then
	ec=0
	for i in ${args}; do
		"${0}" ${i} || ec=1
	done
	exit ${ec}
fi

check_profile_exists "${arguments[profile]}"
profile=${arguments[profile]}
profile=${profile//./-} # lock does not like dots
exec lock lock -f noerror owncloud-${profile} "${0}" execute ${arguments[profile]}
